# -*- coding: utf-8 -*-
"""KeggleCompetition.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jgZgetC__dcI7BG03uTOpryECg0jlqvM
"""

# Import necessary libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.linear_model import LassoCV
from sklearn.metrics import mean_absolute_error

# Load datasets
train = pd.read_csv('/content/train.csv')
test = pd.read_csv('/content/test.csv')
submission = pd.read_csv('/content/sample_submission.csv')

# Data overview
print(train.shape)
print(test.shape)
print(train.head())

# Separate features and target
X = train.drop(columns=['Id', 'SalePrice'])
y = train['SalePrice']

# Combine train and test for consistent preprocessing
test_ids = test['Id']
test = test.drop(columns=['Id'])
combined = pd.concat([X, test], axis=0)

# Feature engineering
# Fill missing values
combined = combined.fillna(combined.median(numeric_only=True))
combined = combined.fillna('None')  # For categorical variables

# Encode categorical variables
categorical_cols = combined.select_dtypes(include='object').columns
for col in categorical_cols:
    le = LabelEncoder()
    combined[col] = le.fit_transform(combined[col])

# Feature scaling
scaler = StandardScaler()
combined_scaled = pd.DataFrame(scaler.fit_transform(combined), columns=combined.columns)

# Split combined data back into train and test sets
X = combined_scaled.iloc[:len(train), :]
X_test = combined_scaled.iloc[len(train):, :]

# Train-test split for evaluation
X_train, X_valid, y_train, y_valid = train_test_split(X, y, test_size=0.2, random_state=42)

# Apply Lasso regression
lasso = LassoCV(cv=5, random_state=42)
lasso.fit(X_train, y_train)

# Predict and evaluate
y_pred = lasso.predict(X_valid)
mae = mean_absolute_error(y_valid, y_pred)
print(f"Lasso Regression MAE: {mae:.4f}")

# Feature importance
importance = pd.Series(np.abs(lasso.coef_), index=X.columns).sort_values(ascending=False)
print("Top 10 important features:")
print(importance.head(10))

# Predict on test set
test_predictions = lasso.predict(X_test)

# Prepare submission file
submission['SalePrice'] = test_predictions
submission.to_csv('submission.csv', index=False)
print("Submission file created!")